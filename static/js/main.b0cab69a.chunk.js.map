{"version":3,"sources":["apiKeys.js","elements/SearchBar/SearchBar.js","elements/Spinner/Spinner.js","components/MovieCard.js","components/popularMovies.js","components/Modal.js","helper.js","components/Navigation.js","components/DetailMovieCard/DetailMovieCard.js","components/MovieDetails.js","components/Search.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["URL_DETAIL","API_KEY","API_URL","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","callback","className","name","size","type","placeholder","onChange","this","Component","Spinner","MovieCard","loading","results","searchTerm","searchItems","console","log","axios","get","then","res","data","loadMoreItems","style","color","Row","map","movie","key","Col","lg","sm","xs","id","to","Card","border","Img","variant","src","poster_path","title","release_date","popularMovies","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","Navigation","DetailMovieCard","original_title","vote_average","tagline","vote_count","overview","budget","revenue","runtime","backdrop_path","adult","status","genres","Fragment","Grid","container","md","background","item","min","max","optimum","low","high","time","hours","Math","floor","mins","calcTime","Button","MovieDetails","movieData","match","params","response","Search","alt","Footer","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0cab69a.chunk.js","sourcesContent":["export const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\r\nexport const URL_SEARCH = 'https://api.themoviedb.org/3/search/movie?query=';\r\nexport const URL_IMAGE = 'https://image.tmdb.org/t/p/w500/';\r\nexport const URL_BACKGROUND = 'https://image.tmdb.org/t/p/original';\r\nexport const API_KEY = '?api_key=320a50358c05fc0dab60872ae9cc4b74';\r\nexport const API_KEY_ALT = '&api_key=320a50358c05fc0dab60872ae9cc4b74';\r\nexport const IMG_SIZE_XSMALL = 'https://image.tmdb.org/t/p/w45/';\r\nexport const VIDEO_LINK = 'https://api.themoviedb.org/3/movie/';\r\nexport const IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\nexport const BACKDROP_SIZE = 'w1280';\r\nexport const API_URL = 'https://api.themoviedb.org/3/';\r\n","import React, { Component } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: \"\"\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  doSearch = event => {\r\n    this.setState({ value: event.target.value });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.props.callback(this.state.value);\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Type a Movie Here\"\r\n            onChange={this.doSearch}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n     <div className=\"loader\" />\n   \n  );\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { URL_DETAIL, API_KEY,URL_SEARCH,API_URL} from '../apiKeys';\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './components.css';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport Spinner from '../elements/Spinner/Spinner';\r\n\r\n// import Fade from 'react-reveal/Fade';\r\n\r\n\r\nclass MovieCard extends Component {\r\n  state = {\r\n    loading: false,\r\n    results: [],\r\n    searchTerm:\"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    axios.get(`${URL_DETAIL}popular${API_KEY}&language=en-US&page=1`)\r\n      .then((res) => {\r\n        this.setState({ results: res.data.results });\r\n        this.setState({  loading: false });\r\n      });\r\n    // axios.get(`${URL_DETAIL}popular${API_KEY}&language=en-US&page=3`)\r\n    //   .then((res) => {\r\n    //     this.setState({ resultsB: res.data.results });\r\n    //   });\r\n\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    console.log(searchTerm);\r\n    // let endpoint = \"\";\r\n    this.setState({\r\n      loading: true,\r\n      results: [],\r\n      searchTerm\r\n    });\r\n    if (searchTerm === \"\") {\r\n      axios.get(`${URL_DETAIL}popular${API_KEY}&language=en-US&page=1`)\r\n        .then((res) => {\r\n          this.setState({ results: res.data.results });\r\n          this.setState({  loading: false });\r\n        });\r\n    } else {\r\n      axios.get(`${API_URL}search/movie${API_KEY}&language=en-US&query=${searchTerm}`)\r\n        .then((res) => {\r\n          this.setState({ results: res.data.results });\r\n          this.setState({  loading: false });\r\n        });\r\n    }\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    // let endpoint = \"\";\r\n    // this.setState({\r\n    //   loading: true\r\n    // });\r\n    // axios.get(`${URL_DETAIL}popular${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`)\r\n    //   .then((res) => {\r\n    //     this.setState({ results: res.data.results });\r\n    //   });\r\n\r\n    // if (this.state.searchTerm === \"\") {\r\n    //   endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\r\n    //     .state.currentPage + 1}`;\r\n    // } else {\r\n    //   endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${\r\n    //     this.state.searchTerm\r\n    //     }$page=${this.state.currentPage + 1}`;\r\n    // }\r\n    // this.fetchItems(endpoint);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.results)\r\n\r\n    return (\r\n      <div className=\"MovieCard\">\r\n        <SearchBar  callback={this.searchItems} />\r\n        {this.state.searchTerm ? <h3 style={{ color: '#fff' }}> Search result</h3> : <h3 style={{ color: '#fff' }}> Popular Movies</h3>}\r\n        <Row>\r\n          {this.state.results.map((movie, key) => (\r\n            <Col lg={3} sm={4} xs={6} key={movie.id}>\r\n              <Link to={`/movie/${movie.id}`}>\r\n                <Card className=\"hovereffect\" style={{ border: \" 2px solid rgb(95, 228, 95)\" }} >\r\n                  <Card.Img className=\"movieimg\" variant=\"top\" src={movie.poster_path  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : \"./img/No_img.png\"} />\r\n                  <div className=\"overlay\">\r\n                    <h2 >{movie.title}<br></br><span>{movie.release_date}</span></h2>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          ))\r\n          }\r\n        {this.state.loading ? <Spinner /> : null}\r\n        </Row>\r\n        {/* <LoadMoreBtn onClick={this.loadMoreItems} /> */}\r\n\r\n        {/* <Row>\r\n        {this.state.resultsB.map((movie,key) => (\r\n          <Col lg={3} xs={6} key={movie.id}>             \r\n              <Card border=\"dark\" className=\"card\" >\r\n                 <Card.Img className=\"cardimg\" variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} />\r\n\r\n                 <Card.Body className=\"cardtitle\">\r\n                 <Card.Title >{movie.title}</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n        </Col>\r\n        ))\r\n      }\r\n        </Row> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from './MovieCard';\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport { URL_DETAIL, API_KEY } from '../apiKeys';\r\n\r\nclass popularMovies extends Component {\r\n  // state = {\r\n  //   movies: [],\r\n  //   currentPage: 0,\r\n  //   totalPages: 0,\r\n  //   searchTerm: \"\"\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  \r\n\r\n  //   axios.get(`${URL_DETAIL}popular${API_KEY}&language=en-US&page=1`)\r\n  //     .then((res) => {\r\n  //       this.setState({ movies: res.data.results });\r\n  //       this.setState({ currentPage: res.data.page });\r\n  //       this.setState({ totalPages: res.data.total_pages })\r\n  //     });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popular\">\r\n        <MovieCard />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default popularMovies;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport { API_KEY, VIDEO_LINK } from \"../apiKeys\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport FontAwesome from \"react-fontawesome\";\r\n\r\n/* eslint-disable */\r\n\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            videoID: \"\"\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        const id = this.props.modal;\r\n        const url = `${VIDEO_LINK}${id}/videos${API_KEY}`;\r\n        axios.get(url).then(response => {\r\n            this.setState({ videoID: response.data.results[0].key });\r\n        });\r\n    }\r\n    openModal() {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n    render() {\r\n        let videoID;\r\n        if (this.state.videoID !== \"\") {\r\n            videoID = this.state.videoID;\r\n        }\r\n\r\n        return (\r\n            <div className=\"play-list\">\r\n                <ModalVideo\r\n                    channel=\"youtube\"\r\n                    isOpen={this.state.isOpen}\r\n                    videoId={videoID}\r\n                    onClose={() => this.setState({ isOpen: false })}\r\n                    allowFullScreen=\"true\"\r\n                    ratio='16:9'\r\n                />\r\n                {/* <li className=\"col-m-4\" onClick={this.openModal}>\r\n                    <Button className=\"green\"  > Play Trailer </Button>\r\n                </li> */}\r\n                <Button variant=\"outlined\" className=\"btnTrailer\" onClick={this.openModal} ><FontAwesome className=\"fa-play\" />&nbsp; Play Trailer</Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n    const hours = Math.floor(time / 60);\r\n    const mins = time % 60;\r\n    return `${hours}h ${mins}m`;\r\n  }\r\n  \r\n  // Convert a number to $ format\r\n  export const convertMoney = (money) => {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n    });\r\n    return formatter.format(money);\r\n  }","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p style={{color:\"rgb(95, 228, 95)\"}}>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { URL_IMAGE, IMAGE_BASE_URL, BACKDROP_SIZE, API_KEY, VIDEO_LINK } from \"../../apiKeys\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./DetailMovieCard.css\";\r\nimport { Button } from 'react-bootstrap';\r\nimport ModalVideo from \"react-modal-video\";\r\nimport axios from 'axios';\r\nimport Modal from '../Modal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { calcTime, convertMoney } from \"../../helper\";\r\nimport Navigation from '../Navigation';\r\nimport Spinner from '../../elements/Spinner/Spinner';\r\n\r\n\r\nclass DetailMovieCard extends Component {\r\n\tstate = {\r\n\t\tloading: false,\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ loading: true });\r\n\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tposter_path,\r\n\t\t\toriginal_title,\r\n\t\t\tvote_average,\r\n\t\t\tvote_count,\r\n\t\t\ttagline,\r\n\t\t\toverview,\r\n\t\t\trelease_date,\r\n\t\t\tbudget,\r\n\t\t\trevenue,\r\n\t\t\truntime,\r\n\t\t\tbackdrop_path,\r\n\t\t\tadult,\r\n\t\t\ttitle,\r\n\t\t\tstatus,\r\n\t\t\tid,\r\n\t\t\tgenres\r\n\t\t} = this.props.movie;\r\n\r\n\t\t// let modalID;\r\n\t\t// if (typeof this.props.movie.id !== \"undefined\") {\r\n\t\t// \tmodalID = <Modal modal={this.props.movie.id} />\r\n\t\t// }\r\n\t\t// else {\r\n\t\t// \tmodalID = <div>Loading !!! </div>\r\n\r\n\t\t// }\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Navigation movie={original_title} />\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid container className=\"movieinfo\" xs={12} lg={12} md={12}\r\n\t\t\t\t\t\tstyle={{ background: backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop_path}')` : \"#000\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid container className=\"movieinfocontent\" xs={12} lg={12} md={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} md={5} lg={4} className=\"movieinfothumb\">\r\n\t\t\t\t\t\t\t\t<img src={poster_path === 'undefined' ? \"Loading\" : (URL_IMAGE + poster_path)} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} md={7} lg={8} className=\"movieinfo-text \" >\r\n\t\t\t\t\t\t\t\t<h1>{title}&nbsp;<span>({status})</span></h1>\r\n\t\t\t\t\t\t\t\t{tagline === \"\" ? \"\" : <span><FontAwesome className=\"fa-revenue\" name=\"tags\" size=\"2x\" /> ({tagline}) </span>}\r\n\t\t\t\t\t\t\t\t<h3><FontAwesome className=\"fa-revenue\" name=\"calendar\" size=\"2x\" /> Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{release_date}</p>\r\n\t\t\t\t\t\t\t\t<h3><FontAwesome className=\"fa-revenue\" name=\"cloud\" size=\"2x\" /> Overview</h3>\r\n\t\t\t\t\t\t\t\t<p>{overview}</p>\r\n\t\t\t\t\t\t\t\t<h3><FontAwesome className=\"fa-revenue\" name=\"star\" size=\"2x\" /> IMDB RATING</h3>\r\n\t\t\t\t\t\t\t\t<div className=\"rmdb-rating\">\r\n\t\t\t\t\t\t\t\t\t<meter\r\n\t\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\t\t\t\t\toptimum=\"100\"\r\n\t\t\t\t\t\t\t\t\t\tlow=\"40\"\r\n\t\t\t\t\t\t\t\t\t\thigh=\"70\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={vote_average * 10}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<p className=\"rmdb-score\">{vote_average}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h3><FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" /> Running Time</h3>\r\n\t\t\t\t\t\t\t\t\t<p>{calcTime(runtime)}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h3><FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" /> Budget</h3>\r\n\t\t\t\t\t\t\t\t\t{budget === 0 ? \"Not Avaliable\" : <p>{convertMoney(budget)}</p>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h3><FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" /> Revenue</h3>\r\n\t\t\t\t\t\t\t\t\t{budget === 0 ? \"Not Avaliable\" : <p>{convertMoney(revenue)}</p>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* {modalID} */}\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" className=\"btnTrailer\" ><FontAwesome className=\"fa-play\" />&nbsp; Play Trailer</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<FontAwesome className=\"fa-film\" name=\"film\" size=\"4x\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* {this.state.loading ? <Spinner /> : null} */}\r\n\r\n\t\t\t</React.Fragment>\r\n\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DetailMovieCard;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { URL_DETAIL, API_KEY } from '../apiKeys';\r\nimport DetailMovieCard from './DetailMovieCard/DetailMovieCard';\r\n\r\n  \r\nclass MovieDetails extends Component {\r\n  state={\r\n    movieData:{ }\r\n  };\r\n\r\n  componentDidMount(){\r\n    const {id}= this.props.match.params;\r\n    axios \r\n       .get(\r\n        `${URL_DETAIL}${id}${API_KEY}&language=en-US&page=1`\r\n       )\r\n       .then(response => {\r\n\t\t\t\tthis.setState({ movieData: response.data });\r\n\t\t\t});\r\n\t\r\n  }\r\n\r\nrender() {\r\n  console.log(this.state.movieData)\r\n\r\n  return (\r\n      <div>\r\n          <DetailMovieCard movie={this.state.movieData}/>\r\n      </div>\r\n  );\r\n  }\r\n  }\r\n\r\nexport default MovieDetails;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './components.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Search extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"header\" >\r\n        <Grid container>\r\n          <Grid item xs={4}>\r\n            <Link to=\"/\">\r\n              <img src=\"./img/logo.png\" alt=\"logo\" className=\"logo\"></img>\r\n            </Link>\r\n          </Grid>\r\n          {/* <Grid item xs={8}>\r\n            <div className=\"search\">\r\n            <input className=\"searchinput\" type=\"text\" name=\"\" placeholder=\"Type a Movie here...\"/>\r\n            </div>\r\n          </Grid> */}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n   \r\nrender() {\r\n\r\n  return (\r\n      <div className=\"footer\">\r\n       <p>Designed & Developed by Ketan Vala</p>\r\n      </div>\r\n  );\r\n  }\r\n  }\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport popularMovies from './components/popularMovies';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MovieDetails from './components/MovieDetails';\nimport 'fa-icons';\nimport 'font-awesome/css/font-awesome.min.css';\nimport Search from './components/Search';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <React.Fragment>\n          <Search />\n          <Switch>\n            <Route exact path=\"/\" component={popularMovies} />\n            <Route exact path=\"/movie/:id\" component={(props) => <MovieDetails {...props} />} />\n          </Switch>\n          <Footer />\n        </React.Fragment>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}